/*
 * Marketing API
 *
 * Marketing API
 *
 * API version: 1.3
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package main

import (
	"net/http"

	"github.com/tencentad/marketing-api-go-sdk/pkg/ads"
	"github.com/tencentad/marketing-api-go-sdk/pkg/config"
	"github.com/tencentad/marketing-api-go-sdk/pkg/model"
)

type AdcreativesUpdateExample struct {
	TAds        *ads.SDKClient
	AccessToken string
	Data        model.AdcreativesUpdateRequest
}

func (e *AdcreativesUpdateExample) Init() {
	e.AccessToken = ""
	e.TAds = ads.Init(&config.SDKConfig{
		AccessToken: e.AccessToken,
		IsDebug:     true,
	})
	accountId := int64(23238247)
	adcreativeId := int64(7897618099)
	adcreativeName := "卡片广告横版大图 16:9"
	profileId := int64(848992)

	title := "免费体验"
	description := "免费体验"
	//videoId := "4272075196"
	//button := "按钮文字"
	miid := "gh_1a6d35b53c4d"
	mipath := "pages/pandora/index?name=001&crid=12164"
	catlogid := int64(444905)
	psource := "7072de0f4464320cfe33d04a0522104a20220608223256"
	//pageUrl := "https://reachmax.cn/#/moCn/pandora?type=1&name=https%3A%2F%2Fv.watsonsvip.com.cn%2Fmpos%2Fmaterial%2Fpic%2F2022%2F05%2F16539022286679322.jpg?crid=12159"
	imageList := []string{
		"4416794033",
	}
	labelContent := "免费体验"
	var cl []model.CreativeLabel
	m := model.CreativeLabel{
		Content: &labelContent,
	}
	cl = append(cl, m)
	e.Data = model.AdcreativesUpdateRequest{
		AccountId:      &accountId,
		AdcreativeId:   &adcreativeId,
		AdcreativeName: &adcreativeName,
		AdcreativeElements: &model.AdcreativeCreativeElementsMp{
			Title:       &title,
			Description: &description,
			ImageList:   &imageList,
			Label:       &cl,
		},
		ProfileId: &profileId,
		PageSpec: &model.PageSpec{
			MiniProgramSpec: &model.AdcreativeMiniProgramSpec{
				MiniProgramId:   &miid,
				MiniProgramPath: &mipath,
			},
		},
		DynamicAdcreativeSpec: &model.DynamicAdcreativeSpec{
			ProductCatalogId: &catlogid,
			ProductMode:      "SINGLE",
			ProductSource:    &psource,
		},

		HeadClickType: "HEAD_CLICK_TYPE_DEFAULT",
		PageType:      "PAGE_TYPE_MINI_PROGRAM_WECHAT",
		LinkPageType:  "LINK_PAGE_TYPE_MINI_PROGRAM_WECHAT",
		LinkPageSpec: &model.LinkPageSpec{
			MiniProgramSpec: &model.AdcreativeMiniProgramSpec{
				MiniProgramId:   &miid,
				MiniProgramPath: &mipath,
			},
		},
		LinkNameType: "VIEW_DETAILS",
	}
}

func (e *AdcreativesUpdateExample) RunExample() (model.AdcreativesUpdateResponseData, http.Header, error) {
	tads := e.TAds
	// change ctx as needed
	ctx := *tads.Ctx
	return tads.UseProduction().Adcreatives().Update(ctx, e.Data)
}

func main() {
	e := &AdcreativesUpdateExample{}
	e.Init()
	_, _, _ = e.RunExample()

}
